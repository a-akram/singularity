BootStrap: docker
From: nvidia/cuda:10.1-devel-ubuntu18.04

# Hovorod: https://github.com/uber/horovod

%help
    This Singularity definition contains Ubuntu 18.04, TensorFlow 2.3.0, PyTorch 1.7 w/ CUDATOOLKIT, CuDNN, NCCL2 etc.
    Moreover, everything is installed in the system e.g. python3, pip3, tensorflow, pytorch, openmpi and horovod.
    
    
%environment
	export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
	export LC_ALL=C
	export HOROVOD_GPU_ALLREDUCE=NCCL
	export HOROVOD_GPU_ALLGATHER=MPI
	export HOROVOD_GPU_BROADCAST=MPI
	
	# If NCCL2 is installed using .deb file, them uncomment.
	# If NCCL2 is installed using the Ubuntu package manager then comment these lines.
	#export HOROVOD_NCCL_HOME=/usr/local/nccl-<version>
	#export HOROVOD_NCCL_INCLUDE=/usr/local/nccl-<version>/include
	#export HOROVOD_NCCL_LIB=/usr/local/nccl-<version>/lib
	
	export PYTHON_VERSION=3.8
	export CUDNN_VERSION=7.6.5.32-1+cuda10.1
	export NCCL_VERSION=2.8.3-1+cuda10.1
    export TENSORFLOW_VERSION=2.3.0
    export PYTORCH_VERSION=1.6.0

%files
    install_geometric.sh
    
%post
	
	# *** Export Versions
    export PYTHON_VERSION=3.8
	export CUDNN_VERSION=7.6.5.32-1+cuda10.1
	export NCCL_VERSION=2.8.3-1+cuda10.1
    export TENSORFLOW_VERSION=2.3.0
    export PYTORCH_VERSION=1.6.0

	# *** Add Nividia Machine Learning Repo. Note: libcudnn will fetch cuda-10.1 as dependency.
	echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list
	
	# *** Update, Upgrade and Install
    apt-get update && apt-get -y upgrade
	apt-get -y install \
        build-essential \
        cmake \
        git \
        curl \
        vim \
        wget \
        ca-certificates \
        libjpeg-dev \
        libpng-dev \
        python${PYTHON_VERSION} \
        python${PYTHON_VERSION}-dev
        
	# *** Add Nividia Deep Learning Repo and Install (libcudnn, libnccl2, libnvinfer etc)
	# *** Note: libcudnn will fetch cuda-10.1 as dependency.
    # echo "deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list
    # apt-get -y update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \
    #    libcudnn7=${CUDNN_VERSION} \
    #    libnccl2=${NCCL_VERSION} \
    #    libnccl-dev=${NCCL_VERSION}
    
	# *** OR install one by one as follows:
	 
    
    
	apt-get clean
	
	# *** Installing Anaconda3 (Silent Mode) ***
	wget -c https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh -O anaconda.sh
	bash anaconda.sh -bp /opt/anaconda
	
	# Load Anaconda Environment Variables
	. /opt/anaconda/etc/profile.d/conda.sh
	
	# Add/append "conda-forge" channel
	conda config --append channels conda-forge
	
	# Update Conda
	conda update conda
	
	# Either, create an environment from .YAML files.
	# conda env create -f tfg.yaml
	
	# OR, create an environment from scratch. Find compatible versions of
	# cudatoolkit (v-10.1.0), cudnn (7.6.0) and tensorflow-gpu (2.3.0)
	
	conda activate base
	conda create --name tfg --clone base -y
	conda activate tfg
	#conda install cudatoolkit=10.1.243 -y
	#conda install cudnn=7.6.0=cuda10.1_0 -y
	conda install mpi4py 
	
	chmod +x install_geometric.sh
    ./install_geometric.sh

	pip install tensorflow-gpu==2.3.0 pandas jupyterlab
	pip install pytorch-lightning==1.0.2 faiss-gpu graph_nets>=1.1
	pip install 'trackml@https://github.com/LAL/trackml-library/tarball/master#egg=trackml-3'
	#pip install torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html

	HOROVOD_WITH_MPI=1 pip install horovod
	
	# *** Setup Conda Init ***
	mv ~/.bashrc ~/.bashrcold
	conda init
	cat ~/.bashrc >> /etc/conda.init
	echo conda activate tfg >> /etc/conda.init
	conda clean -t
	mv ~/.bashrcold ~/.bashrc
	
	# *** Remove Installation Files ***
	rm -f *-Linux-x86_64.sh *.yaml
	
