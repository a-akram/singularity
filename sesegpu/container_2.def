Bootstrap: docker
From: ubuntu:20.04

%post
	# create a /local/ dir for installation purpose 
	mkdir /local/
	cd /local/
	
	# Update and Upgrade the OS (apt update && apt -y upgrade)
	apt update
	
	# Install Needed Packages. Add -y flag if prompted: Do you want to continue [Y/n]?
	apt -y --force-yes install vim wget bzip2 emacs-nox
	
	# Reconfigure Shell
	dpkg-reconfigure dash
	
	# Download Anaconda
	wget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh
	
	# Run Anaconda*.sh
	bash ./Anaconda3*.sh -b -p /opt/anaconda3
	
	# Load Environment Variables of Anaconda
	. /opt/anaconda3/etc/profile.d/conda.sh
	
	# Create "gpulibs" environment by cloning "base" (-y for yes)
	conda create --name gpulibs --clone base -y
	
	# Activate "gpulibs"
	conda activate gpulibs
	
	# Install Packages in "gpulibs" by Conda/PIP
	conda install -c anaconda cudatoolkit numba
	pip install arrayfire afnumpy minpy mxnet-cu102 cupy-cuda102
	
	# Make "activate" script executable. activate scripts loads
	# anaconda/etc/profile.d/conda.sh and activates "base" environment.
	chmod +x /opt/anaconda3/bin/activate
	
	# Create "tf-gpu" from "base" and install a conda package w/ a specific build number.
	# See the syntax: pkg_name=version=build_string. -c specifies the channel to use.
	
	conda create --name tf-gpu --clone base -y
	conda activate tf-gpu
	conda install -c anaconda cudnn tensorflow==2.2.0=gpu* -y

	# conda activate base           (Maybe we don't need it)
	conda create --name tf-mkl --clone base -y
	conda activate tf-mkl
	conda install -c anaconda tensorflow==2.2.0=mkl* -y

	conda create --name tf-pip --clone tf-mkl -y
	conda activate tf-pip
	conda remove --force tensorflow tensorflow-base
	pip install tensorflow==2.2.0
	
	# Remove the /local/ directory to delete downloaded files.
	cd
	rm -rf /local/
	
	# Add settings to /etc/conda.init
	mv ~/.bashrc ~/.bashrcold
	conda init
	cat ~/.bashrc >> /etc/conda.init
	echo conda activate tf-gpu >> /etc/conda.init
	conda clean -t
	mv ~/.bashrcold ~/.bashrc

%environment
	action="${1##*/}"
	if [ "$action" = "shell" ]; then
		if [ "${SINGULARITY_SHELL:-}" = "/bin/bash" ]; then
			set -- --noprofile --init-file /etc/conda.init
		elif test -z "${SINGULARITY_SHELL:-}"; then
			export SINGULARITY_SHELL=/bin/bash
			set -- --noprofile --init-file /etc/conda.init
		fi
	fi

%runscript
	BASH_ENV=/etc/conda.init exec /bin/bash --noprofile --init-file /etc/conda.init "$@"
